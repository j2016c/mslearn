# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-latest'
  demands:
     npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'

steps:
 - task: DotnetCoreInstaller@0
      displayName: 'Use .Net Core SDK 2.1.505'
      inputs:
        version: '3.0.x'

 - task: Npm@1
    DisplayName: 'Run npm install'
    inputs:
         verbose: false

 - Script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
     displayName: 'Compile Sass assets'

 - task: gulp@1
  displayName: 'Run gulp tasks'

 - scritp: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" . buildinfo.txt'
   displayName: 'Write build info'
   workingDirectory: 'wwwrootDir'

-task: DotnetCoreCLI@2
   dispalyName: 'Restore project dependencies'
  inputs:
     command: 'restore'
     projects: '**/*.csproj'

- task: DotNetCoreCLI@2
     displayName: 'Build the project -$(buildconfiguration)'
     inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--no-restore --configuration $(buildconfiguration)'


-task: DotnetCoreCLI@2
  dispalyName: 'Build the project - $(buildConfiguration)'
  inputs:
     command: 'build'
     arguments: '--no-restore --configuration $(buildConfiguration)'
     projects: '**/*.csproj'

-task: DotNetCoreCLI@2
    diplayName: 'Publish the project - Release'
    inputs:
      command: 'publish'
      projects: '**/*.csproj'
      publishWebProjects: false
      arguments: '--no-build --configuration $(buildConfiguration)  --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
      zipAfterPublish: true

-task: PublishBuildArtifacts@1
     displayName: 'Publish Artifact: drop'
     condition: succeeded()
